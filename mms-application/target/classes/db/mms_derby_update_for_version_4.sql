-- Autogenerated: do not edit this file

RENAME TABLE GLOBAL_CONFIGURATION TO MMS_GLOBAL_CONFIGURATION;
UPDATE MMS_GLOBAL_CONFIGURATION SET CODE = '5' WHERE NAME = 'GLOBAL_VERSION';
-- Typos fixed.
DELETE FROM MMS_GLOBAL_CONFIGURATION WHERE NAME = 'ATTACHMENT_AS_CONTENT_ENABLE';
UPDATE MMS_GLOBAL_CONFIGURATION SET DESCRIPTION = '将HTM文件转变为正文' WHERE NAME = 'ATTACHMENT_AS_CONTENT' and CODE = 'htm';
UPDATE MMS_GLOBAL_CONFIGURATION SET DESCRIPTION = '将HTML文件转变为正文' WHERE NAME = 'ATTACHMENT_AS_CONTENT' and CODE = 'html';
UPDATE MMS_GLOBAL_CONFIGURATION SET DESCRIPTION = '将文本文件转变为正文' WHERE NAME = 'ATTACHMENT_AS_CONTENT' and CODE = 'txt';
ALTER TABLE MMS_GLOBAL_CONFIGURATION ADD COLUMN VAL INT;
ALTER TABLE MMS_GLOBAL_CONFIGURATION ALTER COLUMN CODE NULL;

RENAME TABLE MMS_MAIL_CONFIGURATION TO MMS_MAIL_SERVER_CONFIGURATION;
RENAME COLUMN MMS_MAIL_SERVER_CONFIGURATION.CONFIG_ID TO MS_ID;
ALTER TABLE MMS_MAIL_SERVER_CONFIGURATION DROP COLUMN SMTPS_ENABLE;
ALTER TABLE MMS_MAIL_SERVER_CONFIGURATION ALTER COLUMN MS_ID RESTART WITH 2;
ALTER TABLE MMS_MAIL_SERVER_CONFIGURATION ADD COLUMN STATUS CHAR(1) NOT NULL DEFAULT 'Y';

-- add status column to the database configuration table..
RENAME TABLE MMS_DB_CONFIGURATION TO MMS_DS_CONFIGURATION;
ALTER TABLE MMS_DS_CONFIGURATION ADD COLUMN DS_NAME VARCHAR(50) NOT NULL DEFAULT 'default';
ALTER TABLE MMS_DS_CONFIGURATION ADD COLUMN ACTIVE CHAR(1) NOT NULL DEFAULT 'Y';
RENAME COLUMN MMS_DS_CONFIGURATION.CONFIG_ID TO DS_ID;

RENAME TABLE MMS_JOB_LIST TO MMS_MAIL_JOB;
RENAME COLUMN MMS_MAIL_JOB.CONFIG_ID TO MS_ID;
ALTER TABLE MMS_MAIL_JOB ADD COLUMN DS_ID INT;
UPDATE MMS_MAIL_JOB SET  DS_ID = (SELECT DS_ID FROM MMS_DS_CONFIGURATION {LIMIT 1});
ALTER TABLE MMS_MAIL_JOB ALTER COLUMN DS_ID NOT NULL;
ALTER TABLE MMS_MAIL_JOB ADD CONSTRAINT MMS_MAIL_JOB_MS_FR FOREIGN KEY (MS_ID) REFERENCES MMS_MAIL_SERVER_CONFIGURATION;
ALTER TABLE MMS_MAIL_JOB ADD CONSTRAINT MMS_MAIL_JOB_DS_FR FOREIGN KEY (DS_ID) REFERENCES MMS_DS_CONFIGURATION;

CREATE TABLE MMS_SCHEDULE (
	SCHEDULE_ID INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	DISPLAY_NAME VARCHAR(50) NOT NULL,
	JOB_NAME VARCHAR(50) NOT NULL UNIQUE,
	GROUP_NAME VARCHAR(50) NOT NULL DEFAULT 'MMS',
	ACTION_TYPE INT NOT NULL,
	URL VARCHAR(200),
	MS_ID INT CONSTRAINT MMS_SCHEDULE_MS_FR REFERENCES MMS_MAIL_SERVER_CONFIGURATION,
	DS_ID INT CONSTRAINT MMS_SCHEDULE_DS_FR REFERENCES MMS_DS_CONFIGURATION,
	COMMAND VARCHAR(500),
	COMMAND_VARIABLE VARCHAR(1000),
	SQL_SENTENCE LONG VARCHAR,
	ATTACHMENT_AS_CONTENT BOOLEAN NOT NULL DEFAULT TRUE,
	CRON_EXPRESSION VARCHAR(500),
	DELAY_TIME BIGINT NOT NULL DEFAULT 0,
	DELAY_DATE TIMESTAMP,
	DESCRIPTION VARCHAR(500),
	STATUS CHAR(1) NOT NULL DEFAULT 'I',
	CREATE_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE MMS_SCHEDULE_LOG (
	LOG_ID BIGINT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	SCHEDULE_ID INT NOT NULL CONSTRAINT MMS_SCHEDULE_LOG_SCHEDULE REFERENCES MMS_SCHEDULE,
	STATUS CHAR(1) NOT NULL DEFAULT 'Y',
	EXECUTION_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	RUNTIME_COUNT INT NOT NULL,
	MESSAGE VARCHAR(1000),
	CREATE_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, CRON_EXPRESSION, DESCRIPTION, STATUS) VALUES ('系统重启服务', 'ACTION_AUTO_RESTART', 0, '0 43 2 * * ? *', '系统重启','I');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, CRON_EXPRESSION, DELAY_TIME, DESCRIPTION, STATUS) VALUES ('数据库连接检测程序', 'ACTION_DB_CONNECTION_VALIDATION', 1, '0 0/1 * * * ? *',8000, '数据库连接检测程序','I');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, CRON_EXPRESSION, DELAY_TIME, DESCRIPTION, STATUS) VALUES ('邮件任务发送程序', 'ACTION_MAIL_SENDER', 3, '0/10 * * * * ? *', 5000, '邮件任务发送程序','I');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, CRON_EXPRESSION, DELAY_TIME, DESCRIPTION) VALUES ('邮件任务重发程序', 'ACTION_MAIL_RESENDER', 6, '0 0/5 * * * ? *', 30000, '对于十分钟内发送失败的邮件尝试重新发送');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, CRON_EXPRESSION, DELAY_TIME, DESCRIPTION) VALUES ('系统日志清理', 'ACTION_CLEAR_LOG', 8, '0 43 1 1 * ? *', 30000, '自动清理一月之前的日志信息');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, MS_ID, DS_ID, ATTACHMENT_AS_CONTENT, CRON_EXPRESSION, DESCRIPTION, STATUS) VALUES ('邮件任务扫描程序', 'ACTION_MAIL_SCAN', 2, (SELECT MS_ID FROM MMS_MAIL_SERVER_CONFIGURATION {LIMIT 1}), (SELECT DS_ID FROM MMS_DS_CONFIGURATION {LIMIT 1}), TRUE, '0/10 * * * * ? *', '邮件任务扫描程序','I');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动结余计算', 'AUTO_LEAVE_BALANCE', 4, 'AUTO_LEAVE_BALANCE', 'AUTO CREATE LEAVE ASSIGNED & USED & BALANCE & YEAR_BALANCE','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('考勤自动分析（新）', 'AUTO_ATT2_ANALYSIS', 4, 'AUTO_ATT2_ANALYSIS', 'AUTO ATTENDANCE ANALYSIS (NEW)','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('考勤自动抓卡', 'AUTO_ATT_DATA_IMPORT', 4, 'AUTO_ATT_DATA_IMPORT', 'AUTO ATTENDANCE DATA IMPORT','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动发送通知书', 'AUTO_SEND_PLAN', 4, 'AUTO_SEND_PLAN', 'AUTO SEND NOTIFICATION','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动入职通知', 'AUTO_NEW_HIRE', 4, 'AUTO_NEW_HIRE', 'AUTO NEW HIRE NOTIFICATION','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动重启HR服务', 'AUTO_RESTART_RUNTIME', 4, 'AUTO_RESTART_RUNTIME', 'AUTO RESTART RUNTIME ENGINS','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('考勤自动分析', 'AUOT_ATT_ANALYSIS', 4, 'AUOT_ATT_ANALYSIS', 'AUTO ATTENDANCE ANALYSIS','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动发送邮件（Magic版）', 'AUTO_SEND_MAIL', 4, 'AUTO_SEND_MAIL', 'AUTO SEND EMAIL','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动更新审批关系', 'AUTO_REFRESH_STAFF_RELATION', 4, 'AUTO_REFRESH_STAFF_RELATION', 'AUTO REFRESH STAFF RELATION','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动执行SQL语句', 'AUTO_EXECUTE_SQL', 4, 'AUTO_EXECUTE_SQL', 'AUTO EXECUTE SQL','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动获取LDAP域OU信息', 'AUTO_GET_LDAP_OU', 4, 'AUTO_GET_LDAP_OU', 'AUTO GET LDAP OU','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动执行流程触发器', 'AUTO_FLW_TRIG', 4, 'AUTO_FLW_TRIG', 'AUTO EXECUTE WORKFLOW TRIGGER','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动发送安全日志', 'AUTO_SEND_RIGHT_LOG', 4, 'AUTO_SEND_RIGHT_LOG', 'AUTO SEND RIGHT LOG','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动生效员工预异动记录', 'AUTO_PER_CHANGE_CONFIRM', 4, 'AUTO_PER_CHANGE_CONFIRM', 'AUTO CONFIRM STAFF CHANGE','E');
INSERT INTO MMS_SCHEDULE (DISPLAY_NAME, JOB_NAME, ACTION_TYPE, URL, DESCRIPTION, STATUS) VALUES ('自动匹配班值、休假政策、工资组、假期表信息', 'AUTO_MATCH_SHIFT', 4, 'AUTO_MATCH_SHIFT', 'AUTO MATCH SHIFT/LEAVE_POLICY/PAY_GROUP/HOLIDAY_TYPE','E');

ALTER TABLE MMS_MAIL_JOB ADD COLUMN SCHEDULE_ID INT CONSTRAINT MMS_MAIL_JOB_SCHEDULE REFERENCES MMS_SCHEDULE;
UPDATE MMS_MAIL_JOB SET SCHEDULE_ID = (SELECT SCHEDULE_ID FROM MMS_SCHEDULE WHERE ACTION_TYPE = 2 {LIMIT 1});
ALTER TABLE MMS_MAIL_JOB ALTER COLUMN SCHEDULE_ID NOT NULL;

INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',0,'自动重启服务','S','自动重启服务为系统服务');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',1,'数据库连接检测程序','S','数据库连接检测程序为系统服务,可以保证数据库连接正常');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',2,'邮件扫描任务','G','邮件扫描任务，可定期扫描邮件发送任务');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',3,'邮件发送任务','S','邮件发送任务，可定期发送队列中的邮件');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',4,'MMS计划任务','G','MMS计划任务，用于执行MMS的计划任务');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',6,'邮件重发任务','S','对于十分钟内发送失败的邮件尝试重新发送');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, VAL, TITLE, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_ACTION_TYPE',8,'系统日志清理','S','自动清理一月之前的日志信息');

INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, TITLE, CONTENT, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_MMS_LAST_INPUT','VPROTOCOL','http://','Y','记忆最后一次输入的内容');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, TITLE, CONTENT, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_MMS_LAST_INPUT','VHOST','','Y','记忆最后一次输入的内容');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, TITLE, CONTENT, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_MMS_LAST_INPUT','VPORT','82','Y','记忆最后一次输入的内容');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, TITLE, CONTENT, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_MMS_LAST_INPUT','VAPPNAME','HRsoft2000','Y','记忆最后一次输入的内容');
INSERT INTO MMS_GLOBAL_CONFIGURATION(NAME, TITLE, CONTENT, ACTIVE, DESCRIPTION) VALUES ('SCHEDULE_MMS_LAST_INPUT','VPRGNAME','','Y','记忆最后一次输入的内容');

-- SCHEDULE TABLES
CREATE TABLE QRTZ_JOB_DETAILS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	JOB_NAME VARCHAR(200) NOT NULL,
	JOB_GROUP VARCHAR(200) NOT NULL,
	DESCRIPTION VARCHAR(250) ,
	JOB_CLASS_NAME VARCHAR(250) NOT NULL,
	IS_DURABLE VARCHAR(5) NOT NULL,
	IS_NONCONCURRENT VARCHAR(5) NOT NULL,
	IS_UPDATE_DATA VARCHAR(5) NOT NULL,
	REQUESTS_RECOVERY VARCHAR(5) NOT NULL,
	JOB_DATA BLOB,
	PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE QRTZ_TRIGGERS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	JOB_NAME VARCHAR(200) NOT NULL,
	JOB_GROUP VARCHAR(200) NOT NULL,
	DESCRIPTION VARCHAR(250),
	NEXT_FIRE_TIME BIGINT,
	PREV_FIRE_TIME BIGINT,
	PRIORITY INTEGER,
	TRIGGER_STATE VARCHAR(16) NOT NULL,
	TRIGGER_TYPE VARCHAR(8) NOT NULL,
	START_TIME BIGINT NOT NULL,
	END_TIME BIGINT,
	CALENDAR_NAME VARCHAR(200),
	MISFIRE_INSTR SMALLINT,
	JOB_DATA BLOB,
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	REPEAT_COUNT BIGINT NOT NULL,
	REPEAT_INTERVAL BIGINT NOT NULL,
	TIMES_TRIGGERED BIGINT NOT NULL,
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE QRTZ_CRON_TRIGGERS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	CRON_EXPRESSION VARCHAR(120) NOT NULL,
	TIME_ZONE_ID VARCHAR(80),
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512),
    STR_PROP_2 VARCHAR(512),
    STR_PROP_3 VARCHAR(512),
    INT_PROP_1 INT,
    INT_PROP_2 INT,
    LONG_PROP_1 BIGINT,
    LONG_PROP_2 BIGINT,
    DEC_PROP_1 NUMERIC(13,4),
    DEC_PROP_2 NUMERIC(13,4),
    BOOL_PROP_1 VARCHAR(5),
    BOOL_PROP_2 VARCHAR(5),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE QRTZ_BLOB_TRIGGERS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	BLOB_DATA BLOB,
	PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE QRTZ_CALENDARS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	CALENDAR_NAME VARCHAR(200) NOT NULL,
	CALENDAR BLOB NOT NULL,
	PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
	PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)	
);

CREATE TABLE QRTZ_FIRED_TRIGGERS (
	SCHED_NAME VARCHAR(120) NOT NULL,
	ENTRY_ID VARCHAR(95) NOT NULL,
	TRIGGER_NAME VARCHAR(200) NOT NULL,
	TRIGGER_GROUP VARCHAR(200) NOT NULL,
	INSTANCE_NAME VARCHAR(200) NOT NULL,
	FIRED_TIME BIGINT NOT NULL,
	SCHED_TIME BIGINT NOT NULL,
	PRIORITY INTEGER NOT NULL,
	STATE VARCHAR(16) NOT NULL,
	JOB_NAME VARCHAR(200),
	JOB_GROUP VARCHAR(200),
	IS_NONCONCURRENT VARCHAR(5),
	REQUESTS_RECOVERY VARCHAR(5),
	PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);

CREATE TABLE QRTZ_SCHEDULER_STATE (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
	PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);

CREATE TABLE QRTZ_LOCKS (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME VARCHAR(40) NOT NULL,
	PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);

